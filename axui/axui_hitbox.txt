--@name axui_hitbox
--@author
--@client

local pressHolding = nil

function getScreenPosOnHoloRT( Screen, StartPos, AimNormal ) -- toakley
    
    local Intersect = trace.intersectRayWithPlane( StartPos, AimNormal, Screen:getPos(), Screen:getAngles():getUp() )
    if not Intersect then return nil, nil end
    
    local ScreenSize = Screen:getScale() * 12
    local ScreenResolution = 1024
    
    local SizeToPixelRatioX = ScreenResolution / ScreenSize[1]
    local SizeToPixelRatioY = ScreenResolution / ScreenSize[2]
    
    local ScreenCorner = localToWorld( Vector( -ScreenSize[1] / 2, -ScreenSize[2] / 2, 0 ), Angle(), Screen:getPos(), Screen:getAngles() ) 
    local LocalIntersect = worldToLocal( Intersect, Angle(), ScreenCorner, Screen:getAngles() ) 
    
    local PixelY = LocalIntersect[1] * SizeToPixelRatioX
    local PixelX = LocalIntersect[2] * SizeToPixelRatioY
    
    if ( (PixelX > 1024) or (PixelX < 0) ) or ( (PixelY > 1024) or (PixelY < 0) ) then
       PixelX,PixelY = nil, nil 
    else
        return math.floor(PixelX), math.floor(PixelY)
    end
    
end

axui.cursorSF = Vector(0, 0, 0)

hook.add("render", "axui.Hitbox", function()
    local sx, sy = render.cursorPos()
    axui.cursorSF.x = sx
    axui.cursorSF.y = sy
end)

hook.add("renderoffscreen", "axui.Hitbox", function()
    for i, panel in pairs(axui.panels) do
        if pressHolding and pressHolding ~= panel then continue end
        local cursorPos = Vector()

        if type(panel.context) == "Hologram" then
            cursorPos.x, cursorPos.y = getScreenPosOnHoloRT( panel.context, eyePos(), eyeVector() )
        else
            cursorPos.x = axui.cursorSF.x
            cursorPos.y = axui.cursorSF.y
            
            if (cursorPos.x and cursorPos.y) and panel.context == "screenRT" then
                cursorPos.x = cursorPos.x * 2
                cursorPos.y = cursorPos.y * 2

                render.selectRenderTarget("ui")
                render.drawRect(cursorPos.x - 5, cursorPos.y - 5, 10, 10)
            end
        end
        
        panel.cursorPos = cursorPos

        if (cursorPos.x and cursorPos.y) and cursorPos:withinAABox(panel.pos, panel.pos + Vector(panel.size.w, panel.size.h)) then
            panel.isHovered = true
            panel:onHovered()

            if player():keyDown(IN_KEY.ATTACK) then
                if not panel.isPressed then
                    panel:onLeftClick()
                end
                panel.lastKey = IN_KEY.ATTACK
                panel.isPressed = true
            elseif player():keyDown(IN_KEY.ATTACK2) then
                if not panel.isPressed then
                    panel:onRightClick()
                end
                panel.lastKey = IN_KEY.ATTACK2
                panel.isPressed = true
            elseif player():keyDown(IN_KEY.USE) then
                if not panel.isPressed then
                    panel:onLeftClick()
                end
                panel.lastKey = IN_KEY.USE
                panel.isPressed = true
            else
                panel.isPressed = false
            end
        else
            panel.isHovered = false

            if panel.isPressed then
                if not player():keyDown(panel.lastKey) then
                    panel.isPressed = false
                    pressHolding = nil
                else
                    pressHolding = panel
                    break
                end
            end
        end
    end
end)
